# How to Use These Tools

## üõ†Ô∏è Prevention Tools Created

### 1. **`.gitignore-template`** 
- Comprehensive template for AWS/Terraform/Docker projects
- Excludes sensitive files while keeping important config files

### 2. **`PRE-COMMIT-CHECKLIST.md`**
- Step-by-step checklist before every commit
- Security checks, file organization, and best practices

### 3. **`scripts/pre-commit-hook.sh`**
- Automated script to check for common issues
- Detects sensitive data, terraform state files, etc.

### 4. **`scripts/setup-project.sh`**
- Automated project initialization
- Creates proper directory structure and files

## üöÄ How to Use These Tools

### **For New Projects:**
```bash
# Run the setup script
./scripts/setup-project.sh
```

### **Before Every Commit:**
```bash
# Run the pre-commit hook
./scripts/pre-commit-hook.sh

# Or follow the checklist manually
cat PRE-COMMIT-CHECKLIST.md
```

### **Quick Security Check:**
```bash
# Check for sensitive data
grep -r "password\|token\|key\|secret" . --exclude-dir=.git
```

## üîë Key Lessons Learned

1. **Always create `.gitignore` first** - Before adding any files
2. **Be specific with exclusions** - Don't exclude entire directories like `terraform/`
3. **Check for sensitive data** - Use automated tools to scan
4. **Use templates** - Start with proven configurations
5. **Follow checklists** - Don't rely on memory alone

## üõ°Ô∏è Best Practices Going Forward

- **Start every project** with the setup script
- **Run pre-commit checks** before every commit
- **Use the checklist** as a reminder
- **Keep templates updated** as you learn new patterns
- **Automate security checks** where possible

These tools will help you maintain consistent, secure, and well-organized projects while avoiding the common pitfalls you encountered!

=====================================
Alpha Vantage API Key for project-2 |
06JX1VYRUJQDR6JS                    |
=====================================